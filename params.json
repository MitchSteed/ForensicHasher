{"name":"ForensicHasher","tagline":"Simplified and enhanced netcat for forensics","body":"# ForensicHasher\r\n\r\nThe Forensic Hasher is basically an enhanced netcat (although it doesn't use netcat under the hood). It is made up of two parts: the workstation and the victim.\r\n\r\n## Workstation\r\nThe workstation listens for any and all incoming requests and upon receipt of those requests writes the data to a file, creates a hash of that file and a timestamp writing to the local directory.\r\n\r\nThe workstation can receive a parameter for which port to bind to (defaults to 3000) and a hashing algorithm to use (to view available algorithms on your system run ./workstation -h). The workstation will continue listening until shut down.\r\n\r\nExample Usage:\r\n```\r\npython workstation -p 3000 -a md5\r\n```\r\n## Victim\r\nThe victim connects to a remote host over the network and passes whatever it receives from standard input to the workstation. The victim has arguments to pass host, port, and filename. Port defaults to 3000, host defaults to localhost, and filename defaults to ForensicHasher.txt although you certainly would want to generally pass this argument.\r\n\r\nExample Usage:\r\n```\r\ncat /etc/passwd python victim.py -p 3000 -d 192.192.192.192 -n etc.passwd.txt\r\n```\r\n\r\nWhich then will connect to the workstation which will create the following files:\r\netc.passwd.txt\r\netc.passwd.txt.md5\r\netc.passwd.txt.date\r\n\r\n### Add Victim to the path\r\nTo add the victim.py to your path to simplify usage simply change the permissions by\r\n```\r\nchmod +x victim.py\r\ncd /usr/bin\r\nln -s ~/path/to/victim.py\r\n```\r\n\r\n### Authors and Contributors\r\n@MitchSteed\r\n@SecretSighter\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}